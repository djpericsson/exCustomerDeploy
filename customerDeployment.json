{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "customerName": {
            "type": "string",
            "defaultValue": "AddlevelTest01",
            "metadata": {
                "description": "The name of the Customer to deploy."
            }
        },
        "tenantName": {
            "type": "string",
            "defaultValue": "exflowdevcloud",
            "metadata": {
                "description": "The name of tenant to deploy to."
            }
        },
        "partner": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the Partner for the Customer deployment."
            }
        },
        "storageSKU": {
            "type": "string",
            "allowedValues": ["Standard_LRS", "Standard_ZRS", "Standard_GRS", "Standard_RAGRS", "Premium_LRS"],
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "The type of SKU to use for the storage account."
            }
        },
        "securityAdmins": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Administrators of the Web Site, separated by ','."
            }
        },
        "appServicePlanSKU": {
            "type": "string",
            "allowedValues": [
                "F1 Free",
                "D1 Shared",
                "B1 Basic",
                "B2 Basic",
                "B3 Basic",
                "S1 Standard",
                "S2 Standard",
                "S3 Standard",
                "P1 Premium",
                "P2 Premium",
                "P3 Premium",
                "P4 Premium"
            ],
            "defaultValue": "B1 Basic",
            "metadata": {
                "description": "The App Service Plan SKU."
            }
        },
        "packageUri": {
            "type": "string",
            "defaultValue": "https://github.com/djpericsson/AzureWebAppDeploy/raw/master/alis.zip",
            "minLength": 1,
            "metadata": {
                "description": "The application package URI to be deployed to the WebApp."
            }
        },
        "exflowUri": {
            "type": "string",
            "defaultValue": "https://axtestdynamics365aos-addlevel.cloudax.dynamics.com",
            "minLength": 1,
            "metadata": {
                "description": "The Exflow URI to be used."
            }
        },
        "webAppCertificateName": {
            "type": "string",
            "defaultValue": "ExDevCloudCert",
            "minLength": 1,
            "metadata": {
                "description": "The Web Application Certificate Name to be used for SSL bindings."
            }
        },
        "hybridConnection": {
            "type": "string",
            "allowedValues": ["True", "False"],
            "defaultValue": "False",
            "metadata": {
                "description": "Create a Hybrid Connection for the Web Application."
            }
        },
        "hybridConnectionHostName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The Hybrid Connection Host Name."
            }
        },
        "hybridConnectionPort": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The Hybrid Connection Port Number."
            }
        }
    },
    "variables": {
        "uniqueCustomerString": "[concat('ex', uniqueString(subscription().subscriptionId, parameters('CustomerName')))]",
        "saasResourceGroupName": "SignUp-SAAS_Services",
        "certificateResourceGroupName": "ALIS",
        "templateBaseUri": "https://raw.githubusercontent.com/djpericsson/exCustomerDeploy/master",
        "dnsDomainName": "signupsoftware.com",
        "wwwHostname": "[concat('www.', tolower(parameters('customerName')))]",
        "appSettings": "[concat('{\"applicationInsightsInstrumentationKey\":\"AppInsightsKey\",\"APPINSIGHTS_INSTRUMENTATIONKEY\":\"AppInsightsKey\",\"APPINSIGHTS_PORTALINFO\":\"ASP.NET\",\"APPINSIGHTS_PROFILERFEATURE_VERSION\":\"1.0.0\",\"startup.DeploymentName\":\"', variables('uniqueCustomerString'),'\",\"Startup.HostRightPart\":\".', parameters('tenantName'),'\",\"Startup.AzureKeyVaultURL\":\"CustomerKeyVault\",\"offline_\":\"85.24.197.82\"}')]",
        "storageAccountName": "[variables('uniqueCustomerString')]",
        "containers": ["attachments", "documents", "exflowdiagnostics"],
        "webSiteName": "[variables('uniqueCustomerString')]",
        "appServicePlanName": "[variables('uniqueCustomerString')]",
        "keyVaultName": "[variables('uniqueCustomerString')]",
        "hybridConnectionName": "[variables('uniqueCustomerString')]",
        "namespaceName": "[variables('uniqueCustomerString')]",
        "namespaceAuthorizationRuleName": "defaultListener",
        "namespaceAuthRuleName": "defaultSender",
        "userMetadata": "[concat('[{\"key\":\"endpoint\",\"value\":\"', parameters('hybridConnectionHostName'), ':', parameters('hybridConnectionPort'), '\"}]')]",
        "appServicePlanSKU": {
            "F1 Free": {
                "name": "F1",
                "capacity": "1"
            },
            "D1 Shared": {
                "name": "D1",
                "capacity": "2"
            },
            "B1 Basic": {
                "name": "B1",
                "capacity": "1"
            },
            "B2 Basic": {
                "name": "B2",
                "capacity": "2"
            },
            "B3 Basic": {
                "name": "B3",
                "capacity": "3"
            },
            "S1 Standard": {
                "name": "S1",
                "capacity": "1"
            },
            "S2 Standard": {
                "name": "S2",
                "capacity": "2"
            },
            "S3 Standard": {
                "name": "S3",
                "capacity": "3"
            },
            "P1 Premium": {
                "name": "P1",
                "capacity": "1"
            },
            "P2 Premium": {
                "name": "P2",
                "capacity": "2"
            },
            "P3 Premium": {
                "name": "P3",
                "capacity": "3"
            },
            "P4 Premium": {
                "name": "P4",
                "capacity": "4"
            }
        },
        "identityResourceId": "[concat(resourceId('Microsoft.Web/sites', variables('webSiteName')),'/providers/Microsoft.ManagedIdentity/Identities/default')]",
        "hybridConnectionResourceId": "[resourceId(resourcegroup().name, 'Microsoft.Relay/Namespaces/Hybridconnections', variables('namespaceName'), variables('hybridConnectionName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "name": "[concat(variables('saasResourceGroupName'),'-DNS')]",
            "resourceGroup": "[variables('saasResourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('templateBaseUri'), '/', 'cnameDeploy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "customerName": {
                        "value": "[parameters('customerName')]"
                    },
                    "webSiteName": {
                        "value": "[variables('webSiteName')]"
                    },
                    "dnsDomainName": {
                        "value": "[variables('dnsDomainName')]"
                    }
                }
            }
        },
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "[parameters('StorageSKU')]",
                "tier": "Standard"
            },
            "properties": {
                "accessTier": "Hot"
            },
            "resources": [
                {
                    "name": "[concat('default/', variables('containers')[0])]",
                    "type": "blobServices/containers",
                    "apiVersion": "2018-07-01",
                    "dependsOn": ["[variables('storageAccountName')]"]
                },
                {
                    "name": "[concat('default/', variables('containers')[1])]",
                    "type": "blobServices/containers",
                    "apiVersion": "2018-07-01",
                    "dependsOn": ["[variables('storageAccountName')]"]
                },
                {
                    "name": "[concat('default/', variables('containers')[2])]",
                    "type": "blobServices/containers",
                    "apiVersion": "2018-07-01",
                    "dependsOn": ["[variables('storageAccountName')]"]
                }
            ]
        },
        {
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2018-07-01",
            "dependsOn": ["[variables('storageAccountName')]"],
            "properties": {
                "cors": {
                    "corsRules": [
                        {
                            "allowedOrigins": ["[parameters('ExflowUri')]"],
                            "allowedMethods": ["GET"],
                            "maxAgeInSeconds": 200,
                            "exposedHeaders": ["x-ms-meta-*"],
                            "allowedHeaders": ["x-ms-meta-abc", "x-ms-meta-data*", "x-ms-meta-target*"]
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2018-02-01",
            "name": "[variables('appServicePlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[variables('AppServicePlanSKU')[parameters('AppServicePlanSKU')].name]",
                "capacity": "[variables('AppServicePlanSKU')[parameters('AppServicePlanSKU')].capacity]"
            },
            "properties": {
                "name": "[variables('appServicePlanName')]"
            }
        },
        {
            "apiVersion": "2017-04-01",
            "name": "[variables('namespaceName')]",
            "type": "Microsoft.Relay/Namespaces",
            "location": "[resourceGroup().location]",
            "condition": "[equals(parameters('hybridConnection'), 'True')]",
            "kind": "Relay",
            "sku": {
                "name": "Standard"
            },
            "properties": {},
            "resources": [
                {
                    "apiVersion": "2017-04-01",
                    "name": "[variables('hybridConnectionName')]",
                    "type": "HybridConnections",
                    "condition": "[equals(parameters('hybridConnection'), 'True')]",
                    "dependsOn": ["[concat('Microsoft.Relay/namespaces/', variables('namespaceName'))]"],
                    "properties": {
                        "requiresClientAuthorization": "true",
                        "userMetadata": "[variables('userMetadata')]"
                    },
                    "resources": [
                        {
                            "apiVersion": "2017-04-01",
                            "name": "[variables('namespaceAuthorizationRuleName')]",
                            "type": "authorizationRules",
                            "condition": "[equals(parameters('hybridConnection'), 'True')]",
                            "dependsOn": [
                                "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourcegroup().name, '/providers/Microsoft.Relay/Namespaces/', variables('namespaceName'), '/HybridConnections/', variables('hybridConnectionName'))]"
                            ],
                            "properties": {
                                "Rights": ["Listen"]
                            }
                        },
                        {
                            "apiVersion": "2017-04-01",
                            "name": "[variables('namespaceAuthRuleName')]",
                            "type": "authorizationRules",
                            "condition": "[equals(parameters('hybridConnection'), 'True')]",
                            "dependsOn": [
                                "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourcegroup().name, '/providers/Microsoft.Relay/Namespaces/', variables('namespaceName'), '/HybridConnections/', variables('hybridConnectionName'))]"
                            ],
                            "properties": {
                                "Rights": ["Send"]
                            }
                        }
                    ]
                }
            ]
        },
        // {
        //     "type": "Microsoft.CertificateRegistration/certificateOrders",
        //     "name": "[parameters('webAppCertificateName')]",
        //     "apiVersion": "2015-08-01",
        //     "location": "global",
        //     "properties": {
        //         "DistinguishedName": "[concat('CN=*.', tolower(parameters('customerName')))]",
        //         "ValidityInYears": 1,
        //         "ProductType": "StandardDomainValidatedWildCardSsl"
        //     }
        // },
        // {
        //     "type": "Microsoft.DomainRegistration/domains/domainOwnershipIdentifiers",
        //     "name": "[concat(tolower(parameters('customerName')), concat('/', parameters('webAppCertificateName')))]",
        //     "apiVersion": "2015-04-01",
        //     "location": "global",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.CertificateRegistration/certificateOrders', parameters('webAppCertificateName'))]"
        //     ],
        //     "properties": {
        //         "ownershipId": "[reference(resourceId('Microsoft.CertificateRegistration/certificateOrders', parameters('webAppCertificateName'))).DomainVerificationToken]"
        //     }
        // },
        {
            "type": "Microsoft.CertificateRegistration/certificateOrders/certificates",
            "name": "[concat(parameters('webAppCertificateName'), concat('/', parameters('webAppCertificateName')))]",
            "apiVersion": "2015-08-01",
            "location": "global",
            "dependsOn": [
                // "[resourceId('Microsoft.CertificateRegistration/certificateOrders', parameters('webAppCertificateName'))]"
            ],
            "properties": {
                "existingKeyVaultId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('certificateResourceGroupName'), '/providers/Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
                "keyVaultSecretName": "[parameters('webAppCertificateName')]"
            }
        },
        {
            "type": "Microsoft.Web/certificates",
            "name": "[parameters('webAppCertificateName')]",
            "apiVersion": "2015-08-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.CertificateRegistration/certificateOrders/certificates', parameters('webAppCertificateName'), parameters('webAppCertificateName'))]"
            ],
            "properties": {
                "existingKeyVaultId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('certificateResourceGroupName'), '/providers/Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
                "keyVaultSecretName": "[parameters('webAppCertificateName')]"
            }
        },
        {
            "apiVersion": "2018-02-01",
            "name": "[variables('webSiteName')]",
            "type": "Microsoft.Web/sites",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": ["[resourceId('Microsoft.Web/serverfarms/', variables('appServicePlanName'))]"],
            "properties": {
                "name": "[variables('webSiteName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', variables('appServicePlanName'))]"
            },
            "resources": [
                {
                    "name": "MSDeploy",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2018-02-01",
                    "dependsOn": ["[resourceId('Microsoft.Web/sites', variables('webSiteName'))]"],
                    "properties": {
                        "packageUri": "[parameters('PackageUri')]",
                        "dbType": "None",
                        "connectionString": "",
                        "setParameters": {
                            // "IIS Web Application Name": "[concat(variables('uniqueString'), uniqueString(resourcegroup().id))]"
                        }
                    }
                },
                {
                    "apiVersion": "2018-02-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('webSiteName'))]",
                        "[concat('Microsoft.Web/Sites/', variables('webSiteName'), '/Extensions/MSDeploy')]"
                    ],
                    "properties": {
                        "aad_ClientId": "[reference(variables('identityResourceId'), '2015-08-31-PREVIEW').principalId]",
                        "aad_ClientSecret": "aad_ClientSecret",
                        "aad_TenantId": "[subscription().tenantId]",
                        "aad_PostLogoutRedirectUri": "[concat('https://',variables('webSiteName'),'.azurewebsites.net/close.aspx?signedout=yes')]",
                        "aad_ExternalApiId": "[parameters('ExflowUri')]",
                        "security_Admins": "[parameters('SecurityAdmins')]"
                    }
                },
                {
                    "apiVersion": "2018-02-01",
                    "name": "connectionstrings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('webSiteName'))]",
                        "[concat('Microsoft.Web/Sites/', variables('webSiteName'), '/Extensions/MSDeploy')]"
                    ],
                    "properties": {
                        "StorageConnection": {
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',concat(listKeys(concat('/Microsoft.Storage/storageAccounts/', variables('storageAccountName')),'2015-05-01-preview').key1))]",
                            "Name": "StorageConnection",
                            "type": "Custom"
                        },
                        "KeyValueStorageConnection": {
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',concat(listKeys(concat('/Microsoft.Storage/storageAccounts/', variables('storageAccountName')),'2015-05-01-preview').key1))]",
                            "Name": "StorageConnection",
                            "type": "Custom"
                        }
                    }
                },
                {
                    "apiVersion": "2018-02-01",
                    "name": "webBindings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('webSiteName'))]",
                        "[concat('Microsoft.Web/Sites/', variables('webSiteName'), '/Extensions/MSDeploy')]",
                        "[resourceId('Microsoft.Web/certificates', parameters('webAppCertificateName'))]"
                    ],
                    "properties": {
                        "name": "[variables('webSiteName')]",
                        "hostNameSslStates": [
                          {
                            "name": "[tolower(parameters('customerName'))]",
                            "sslState": 1,
                            "thumbprint": "[reference(resourceId('Microsoft.CertificateRegistration/certificateOrders', parameters('webAppCertificateName'))).SignedCertificate.Thumbprint]",
                            "toUpdate": true
                          },
                          {
                            "name": "[variables('wwwHostname')]",
                            "sslState": 1,
                            "thumbprint": "[reference(resourceId('Microsoft.CertificateRegistration/certificateOrders', parameters('webAppCertificateName'))).SignedCertificate.Thumbprint]",
                            "toUpdate": true
                          }
                        ]
                    }
                },
                {
                    "apiVersion": "2018-02-01",
                    "name": "[concat(variables('namespaceName'), '/', variables('hybridConnectionName'))]",
                    "type": "hybridConnectionNamespaces/relays",
                    "location": "[resourceGroup().location]",
                    "condition": "[equals(parameters('hybridConnection'), 'True')]",
                    "dependsOn": [
                        "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourcegroup().name, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]"
                    ],
                    "properties": {
                        "serviceBusNamespace": "[variables('namespaceName')]",
                        "relayName": "[variables('hybridConnectionName')]",
                        "relayArmUri": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourcegroup().name, '/providers/Microsoft.Relay/namespaces/', variables('namespaceName'))]",
                        "hostName": "[parameters('hybridConnectionHostName')]",
                        "port": "[parameters('hybridConnectionPort')]",
                        "sendKeyName": "defaultSender",
                        "sendKeyValue": "[listkeys(concat(variables('hybridConnectionResourceId'), '/authorizationRules/defaultSender'), '2017-04-01').primaryKey]"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('keyVaultName')]",
            "apiVersion": "2018-02-14",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[subscription().tenantid]",
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantid]",
                        "objectId": "[reference(concat(resourceId('Microsoft.Web/sites', variables('webSiteName')), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').principalId]",
                        "permissions": {
                            "keys": [],
                            "secrets": ["get"],
                            "certificates": []
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false
            },
            "dependsOn": ["[resourceId('Microsoft.Web/sites', variables('webSiteName'))]"]
        },
        {
            "name": "[guid(variables('webSiteName'))]",
            "apiVersion": "2017-09-01",
            "location": "[resourceGroup().location]",
            "type": "Microsoft.Authorization/roleAssignments",
            "dependsOn": ["[resourceId('Microsoft.Web/sites', variables('webSiteName'))]"],
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[reference(variables('identityResourceId'), '2015-08-31-PREVIEW').principalId]",
                "scope": "[resourceGroup().id]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('uniqueCustomerString'), '/appSettings')]",
            "apiVersion": "2018-02-14",
            "dependsOn": ["[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"],
            "properties": {
                "contentType": "text/plain",
                "value": "[variables('appSettings')]"
            }
        }
    ]
}
